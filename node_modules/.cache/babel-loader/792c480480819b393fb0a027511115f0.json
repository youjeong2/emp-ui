{"ast":null,"code":"import _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"/home/bitai/proj/emp-ui/src/home/common/Header.js\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n//eslint-disable-line\nimport useAnimatedNavToggler from \"../useAnimatedNavToggler.js\";\nimport logo from \"../../images/logo.svg\";\nimport { ReactComponent as MenuIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!feather-icons/dist/icons/menu.svg\";\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!feather-icons/dist/icons/x.svg\";\nconst Header = styled.header.withConfig({\n  displayName: \"Header\",\n  componentId: \"sc-2itxay-0\"\n})({\n  \"display\": \"flex\",\n  \"justifyContent\": \"space-between\",\n  \"alignItems\": \"center\",\n  \"maxWidth\": \"1280px\",\n  \"marginLeft\": \"auto\",\n  \"marginRight\": \"auto\",\n  \"paddingTop\": \"1.25rem\",\n  \"paddingBottom\": \"1.25rem\"\n});\nexport const NavLinks = styled.div.withConfig({\n  displayName: \"Header__NavLinks\",\n  componentId: \"sc-2itxay-1\"\n})({\n  \"display\": \"inline-block\"\n});\n/* hocus: stands for \"on hover or focus\"\n * hocus:bg-primary-700 will apply the bg-primary-700 class on hover or focus\n */\n\nexport const NavLink = styled.a.withConfig({\n  displayName: \"Header__NavLink\",\n  componentId: \"sc-2itxay-2\"\n})({\n  \"fontSize\": \"1.125rem\",\n  \"marginTop\": \"0.5rem\",\n  \"marginBottom\": \"0.5rem\",\n  \"fontWeight\": \"600\",\n  \"letterSpacing\": \"0.025em\",\n  \"transitionProperty\": \"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform\",\n  \"transitionDuration\": \"300ms\",\n  \"paddingBottom\": \"0.25rem\",\n  \"borderBottomWidth\": \"2px\",\n  \"borderColor\": \"transparent\",\n  \":hover\": {\n    \"--border-opacity\": \"1\",\n    \"borderColor\": \"rgba(236, 201, 75, var(--border-opacity))\"\n  },\n  \":hover, :focus\": {\n    \"--text-opacity\": \"1\",\n    \"color\": \"rgba(236, 201, 75, var(--text-opacity))\"\n  },\n  \"@media (min-width: 1024px)\": {\n    \"fontSize\": \"0.875rem\",\n    \"marginLeft\": \"1.5rem\",\n    \"marginRight\": \"1.5rem\",\n    \"marginTop\": \"0\",\n    \"marginBottom\": \"0\"\n  }\n});\n\nvar _StyledNavLink = styled(NavLink).withConfig({\n  displayName: \"Header___StyledNavLink\",\n  componentId: \"sc-2itxay-3\"\n})({\n  \"@media (min-width: 1024px)\": {\n    \"marginLeft\": \"3rem !important\"\n  }\n});\n\nexport const PrimaryLink = styled(NavLink).withConfig({\n  displayName: \"Header__PrimaryLink\",\n  componentId: \"sc-2itxay-4\"\n})({\n  \"paddingLeft\": \"2rem\",\n  \"paddingRight\": \"2rem\",\n  \"paddingTop\": \"0.75rem\",\n  \"paddingBottom\": \"0.75rem\",\n  \"borderRadius\": \"0.25rem\",\n  \"--bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(236, 201, 75, var(--bg-opacity))\",\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(0, 0, 0, var(--text-opacity))\",\n  \":hover, :focus\": {\n    \"--bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(183, 121, 31, var(--bg-opacity))\",\n    \"--text-opacity\": \"1\",\n    \"color\": \"rgba(237, 242, 247, var(--text-opacity))\"\n  },\n  \":focus\": {\n    \"boxShadow\": \"0 0 0 3px rgba(66, 153, 225, 0.5)\"\n  },\n  \"borderBottomWidth\": \"0\",\n  \"@media (min-width: 1024px)\": {\n    \"marginLeft\": \"0\",\n    \"marginRight\": \"0\"\n  }\n});\n\nvar _StyledPrimaryLink = styled(PrimaryLink).withConfig({\n  displayName: \"Header___StyledPrimaryLink\",\n  componentId: \"sc-2itxay-5\"\n})([\"\", \"\"], p => p._css2);\n\nexport const LogoLink = styled(NavLink).withConfig({\n  displayName: \"Header__LogoLink\",\n  componentId: \"sc-2itxay-6\"\n})([\"\", \";img{\", \"}\"], {\n  \"display\": \"flex\",\n  \"alignItems\": \"center\",\n  \"fontWeight\": \"900\",\n  \"borderBottomWidth\": \"0\",\n  \"fontSize\": \"1.5rem !important\",\n  \"marginLeft\": \"0 !important\"\n}, {\n  \"width\": \"2.5rem\",\n  \"marginRight\": \"0.75rem\"\n});\nexport const MobileNavLinksContainer = styled.nav.withConfig({\n  displayName: \"Header__MobileNavLinksContainer\",\n  componentId: \"sc-2itxay-7\"\n})({\n  \"display\": \"flex\",\n  \"flex\": \"1 1 0%\",\n  \"alignItems\": \"center\",\n  \"justifyContent\": \"space-between\"\n});\n\nvar _StyledMobileNavLinksContainer = styled(MobileNavLinksContainer).withConfig({\n  displayName: \"Header___StyledMobileNavLinksContainer\",\n  componentId: \"sc-2itxay-8\"\n})([\"\", \"\"], p => p._css4);\n\nexport const NavToggle = styled.button.withConfig({\n  displayName: \"Header__NavToggle\",\n  componentId: \"sc-2itxay-9\"\n})({\n  \"zIndex\": \"20\",\n  \":focus\": {\n    \"outline\": 0\n  },\n  \":hover, :focus\": {\n    \"--text-opacity\": \"1\",\n    \"color\": \"rgba(236, 201, 75, var(--text-opacity))\"\n  },\n  \"transitionProperty\": \"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform\",\n  \"transitionDuration\": \"300ms\",\n  \"@media (min-width: 1024px)\": {\n    \"display\": \"none\"\n  }\n});\nexport const MobileNavLinks = motion.custom(styled.div.withConfig({\n  displayName: \"Header__MobileNavLinks\",\n  componentId: \"sc-2itxay-10\"\n})([\"\", \" \", \"{\", \"}\"], {\n  \"zIndex\": \"10\",\n  \"position\": \"fixed\",\n  \"top\": \"0\",\n  \"left\": \"0\",\n  \"right\": \"0\",\n  \"marginLeft\": \"1rem\",\n  \"marginRight\": \"1rem\",\n  \"marginTop\": \"1.5rem\",\n  \"marginBottom\": \"1.5rem\",\n  \"padding\": \"2rem\",\n  \"borderWidth\": \"1px\",\n  \"textAlign\": \"center\",\n  \"borderRadius\": \"0.5rem\",\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(26, 32, 44, var(--text-opacity))\",\n  \"--bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(255, 255, 255, var(--bg-opacity))\",\n  \"@media (min-width: 1024px)\": {\n    \"display\": \"none\"\n  }\n}, NavLinks, {\n  \"display\": \"flex\",\n  \"flexDirection\": \"column\",\n  \"alignItems\": \"center\"\n}));\n\nvar _StyledMobileNavLinks = styled(MobileNavLinks).withConfig({\n  displayName: \"Header___StyledMobileNavLinks\",\n  componentId: \"sc-2itxay-11\"\n})([\"\", \"\"], p => p._css5);\n\nexport const DesktopNavLinks = styled.nav.withConfig({\n  displayName: \"Header__DesktopNavLinks\",\n  componentId: \"sc-2itxay-12\"\n})({\n  \"display\": \"none\",\n  \"flex\": \"1 1 0%\",\n  \"justifyContent\": \"space-between\",\n  \"alignItems\": \"center\",\n  \"@media (min-width: 1024px)\": {\n    \"display\": \"flex\"\n  }\n});\n\nvar _StyledDesktopNavLinks = styled(DesktopNavLinks).withConfig({\n  displayName: \"Header___StyledDesktopNavLinks\",\n  componentId: \"sc-2itxay-13\"\n})([\"\", \"\"], p => p._css3);\n\nexport const selectedStyle = {\n  backgroundColor: \"white\",\n  color: \"yellow\"\n};\n\nvar _StyledCloseIcon = styled(CloseIcon).withConfig({\n  displayName: \"Header___StyledCloseIcon\",\n  componentId: \"sc-2itxay-14\"\n})({\n  \"width\": \"1.5rem\",\n  \"height\": \"1.5rem\"\n});\n\nvar _StyledMenuIcon = styled(MenuIcon).withConfig({\n  displayName: \"Header___StyledMenuIcon\",\n  componentId: \"sc-2itxay-15\"\n})({\n  \"width\": \"1.5rem\",\n  \"height\": \"1.5rem\"\n});\n\nexport default (({\n  roundedHeaderButton = false,\n  logoLink,\n  links,\n  className,\n  collapseBreakpointClass = \"lg\"\n}) => {\n  const defaultLinks = /*#__PURE__*/React.createElement(NavLinks, {\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"\\uD648\"), /*#__PURE__*/React.createElement(NavLink, {\n    href: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"\\uCE58\\uC988\"), /*#__PURE__*/React.createElement(NavLink, {\n    href: \"order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"\\uC8FC\\uBB38\"), /*#__PURE__*/React.createElement(NavLink, {\n    href: \"/board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"F&Q\"), /*#__PURE__*/React.createElement(NavLink, {\n    href: \"/survey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"\\uCD94\\uCC9C\"), /*#__PURE__*/React.createElement(NavLink, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Admin\"), /*#__PURE__*/React.createElement(_StyledNavLink, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(_StyledPrimaryLink, {\n    href: \"/signup\",\n    _css2: roundedHeaderButton && {\n      \"borderRadius\": \"9999px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Sign Up\")); // const defaultLinks = ({ match }) => <div className={ \"about-menu\" }>\n  //   <li>\n  //     <NavLinks key={1}>\n  //       <NavLink href=\"/\" style={ match.isExact && selectedStyle }>홈</NavLink>\n  //       <NavLink href=\"/menu\" activeStyle={ selectedStyle }>치즈</NavLink>\n  //       <NavLink href=\"order\" activeStyle={ selectedStyle }>주문</NavLink>\n  //       <NavLink href=\"/board\" activeStyle={ selectedStyle }>F&Q</NavLink>\n  //       <NavLink href=\"/survey\" activeStyle={ selectedStyle }>추천</NavLink>\n  //       <NavLink href=\"/admin\" activeStyle={ selectedStyle }>Admin</NavLink>\n  //       <NavLink href=\"/login\" activeStyle={ selectedStyle } tw=\"lg:ml-12!\">Login</NavLink>\n  //       {/* <PrimaryLink css={roundedHeaderButton && tw`rounded-full`}href=\"/login\">Log In</PrimaryLink> */}\n  //       <PrimaryLink css={roundedHeaderButton && tw`rounded-full`}href=\"/signup\">Sign Up</PrimaryLink>\n  //     </NavLinks>\n  //   </li>\n  // </div>\n\n  const {\n    showNavLinks,\n    animation,\n    toggleNavbar\n  } = useAnimatedNavToggler();\n  const collapseBreakpointCss = collapseBreakPointCssMap[collapseBreakpointClass];\n  const defaultLogoLink = /*#__PURE__*/React.createElement(LogoLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), \"Pick 2 Cheese\");\n  logoLink = logoLink || defaultLogoLink;\n  links = links || defaultLinks;\n  return /*#__PURE__*/React.createElement(Header, {\n    className: className || \"header-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDesktopNavLinks, {\n    _css3: collapseBreakpointCss.desktopNavLinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, logoLink, links), /*#__PURE__*/React.createElement(_StyledMobileNavLinksContainer, {\n    _css4: collapseBreakpointCss.mobileNavLinksContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, logoLink, /*#__PURE__*/React.createElement(_StyledMobileNavLinks, {\n    initial: {\n      x: \"150%\",\n      display: \"none\"\n    },\n    animate: animation,\n    _css5: collapseBreakpointCss.mobileNavLinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, links), /*#__PURE__*/React.createElement(NavToggle, {\n    onClick: toggleNavbar,\n    className: showNavLinks ? \"open\" : \"closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, showNavLinks ? /*#__PURE__*/React.createElement(_StyledCloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(_StyledMenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 56\n    }\n  }))));\n});\n/* The below code is for generating dynamic break points for navbar.\n * Using this you can specify if you want to switch\n * to the toggleable mobile navbar at \"sm\", \"md\" or \"lg\" or \"xl\" above using the collapseBreakpointClass prop\n * Its written like this because we are using macros and we can not insert dynamic variables in macros\n */\n\nconst collapseBreakPointCssMap = {\n  sm: {\n    mobileNavLinks: {\n      \"@media (min-width: 640px)\": {\n        \"display\": \"none\"\n      }\n    },\n    desktopNavLinks: {\n      \"@media (min-width: 640px)\": {\n        \"display\": \"flex\"\n      }\n    },\n    mobileNavLinksContainer: {\n      \"@media (min-width: 640px)\": {\n        \"display\": \"none\"\n      }\n    }\n  },\n  md: {\n    mobileNavLinks: {\n      \"@media (min-width: 768px)\": {\n        \"display\": \"none\"\n      }\n    },\n    desktopNavLinks: {\n      \"@media (min-width: 768px)\": {\n        \"display\": \"flex\"\n      }\n    },\n    mobileNavLinksContainer: {\n      \"@media (min-width: 768px)\": {\n        \"display\": \"none\"\n      }\n    }\n  },\n  lg: {\n    mobileNavLinks: {\n      \"@media (min-width: 1024px)\": {\n        \"display\": \"none\"\n      }\n    },\n    desktopNavLinks: {\n      \"@media (min-width: 1024px)\": {\n        \"display\": \"flex\"\n      }\n    },\n    mobileNavLinksContainer: {\n      \"@media (min-width: 1024px)\": {\n        \"display\": \"none\"\n      }\n    }\n  },\n  xl: {\n    mobileNavLinks: {\n      \"@media (min-width: 1024px)\": {\n        \"display\": \"none\"\n      }\n    },\n    desktopNavLinks: {\n      \"@media (min-width: 1024px)\": {\n        \"display\": \"flex\"\n      }\n    },\n    mobileNavLinksContainer: {\n      \"@media (min-width: 1024px)\": {\n        \"display\": \"none\"\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/bitai/proj/emp-ui/src/home/common/Header.js"],"names":["React","motion","styled","useAnimatedNavToggler","Header","header","NavLinks","div","NavLink","a","PrimaryLink","LogoLink","MobileNavLinksContainer","nav","NavToggle","button","MobileNavLinks","custom","DesktopNavLinks","selectedStyle","backgroundColor","color","roundedHeaderButton","logoLink","links","className","collapseBreakpointClass","defaultLinks","showNavLinks","animation","toggleNavbar","collapseBreakpointCss","collapseBreakPointCssMap","defaultLogoLink","logo","desktopNavLinks","mobileNavLinksContainer","x","display","mobileNavLinks","sm","md","lg","xl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { css } from \"styled-components/macro\"; //eslint-disable-line\n\nimport useAnimatedNavToggler from \"../useAnimatedNavToggler.js\";\n\nimport logo from \"../../images/logo.svg\";\nimport { ReactComponent as MenuIcon } from \"feather-icons/dist/icons/menu.svg\";\nimport { ReactComponent as CloseIcon } from \"feather-icons/dist/icons/x.svg\";\n\nconst Header = tw.header`\n  flex justify-between items-center\n  max-w-screen-xl mx-auto pt-5 pb-5\n`;\n\nexport const NavLinks = tw.div`inline-block`;\n\n/* hocus: stands for \"on hover or focus\"\n * hocus:bg-primary-700 will apply the bg-primary-700 class on hover or focus\n */\nexport const NavLink = tw.a`\n  text-lg my-2 lg:text-sm lg:mx-6 lg:my-0\n  font-semibold tracking-wide transition duration-300\n  pb-1 border-b-2 border-transparent hover:border-yellow-500 hocus:text-yellow-500\n`;\n\nexport const PrimaryLink = tw(NavLink)`\n  lg:mx-0\n  px-8 py-3 rounded bg-yellow-500 text-black\n  hocus:bg-yellow-700 hocus:text-gray-200 focus:shadow-outline\n  border-b-0\n`;\n\nexport const LogoLink = styled(NavLink)`\n  ${tw`flex items-center font-black border-b-0 text-2xl! ml-0!`};\n\n  img {\n    ${tw`w-10 mr-3`}\n  }\n`;\n\nexport const MobileNavLinksContainer = tw.nav`flex flex-1 items-center justify-between`;\nexport const NavToggle = tw.button`\n  lg:hidden z-20 focus:outline-none hocus:text-yellow-500 transition duration-300\n`;\nexport const MobileNavLinks = motion.custom(styled.div`\n  ${tw`lg:hidden z-10 fixed top-0 inset-x-0 mx-4 my-6 p-8 border text-center rounded-lg text-gray-900 bg-white`}\n  ${NavLinks} {\n    ${tw`flex flex-col items-center`}\n  }\n`);\n\nexport const DesktopNavLinks = tw.nav`\n  hidden lg:flex flex-1 justify-between items-center\n`;\n\nexport const selectedStyle = {\n  backgroundColor: \"white\", color: \"yellow\"\n}\n\nexport default ({ roundedHeaderButton = false, logoLink, links, className, collapseBreakpointClass = \"lg\" }) => {\n  const defaultLinks = (\n    <NavLinks key={1}>\n      <NavLink href=\"/\" >홈</NavLink>\n      <NavLink href=\"/menu\">치즈</NavLink>\n      <NavLink href=\"order\">주문</NavLink>\n      <NavLink href=\"/board\">F&Q</NavLink>\n      <NavLink href=\"/survey\">추천</NavLink>\n      <NavLink href=\"/about\">Admin</NavLink>\n      <NavLink href=\"/login\" tw=\"lg:ml-12!\">Login</NavLink>\n      {/* <PrimaryLink css={roundedHeaderButton && tw`rounded-full`}href=\"/login\">Log In</PrimaryLink> */}\n      <PrimaryLink css={roundedHeaderButton && tw`rounded-full`}href=\"/signup\">Sign Up</PrimaryLink>\n    </NavLinks>\n  );\n\n  // const defaultLinks = ({ match }) => <div className={ \"about-menu\" }>\n  //   <li>\n  //     <NavLinks key={1}>\n  //       <NavLink href=\"/\" style={ match.isExact && selectedStyle }>홈</NavLink>\n  //       <NavLink href=\"/menu\" activeStyle={ selectedStyle }>치즈</NavLink>\n  //       <NavLink href=\"order\" activeStyle={ selectedStyle }>주문</NavLink>\n  //       <NavLink href=\"/board\" activeStyle={ selectedStyle }>F&Q</NavLink>\n  //       <NavLink href=\"/survey\" activeStyle={ selectedStyle }>추천</NavLink>\n  //       <NavLink href=\"/admin\" activeStyle={ selectedStyle }>Admin</NavLink>\n  //       <NavLink href=\"/login\" activeStyle={ selectedStyle } tw=\"lg:ml-12!\">Login</NavLink>\n  //       {/* <PrimaryLink css={roundedHeaderButton && tw`rounded-full`}href=\"/login\">Log In</PrimaryLink> */}\n  //       <PrimaryLink css={roundedHeaderButton && tw`rounded-full`}href=\"/signup\">Sign Up</PrimaryLink>\n  //     </NavLinks>\n  //   </li>\n  // </div>\n\n  const { showNavLinks, animation, toggleNavbar } = useAnimatedNavToggler();\n  const collapseBreakpointCss = collapseBreakPointCssMap[collapseBreakpointClass];\n\n  const defaultLogoLink = (\n    <LogoLink href=\"/\">\n      <img src={logo} alt=\"logo\" />\n      Pick 2 Cheese\n    </LogoLink>\n  );\n\n  logoLink = logoLink || defaultLogoLink;\n  links = links || defaultLinks;\n\n  return (\n    <Header className={className || \"header-light\"}>\n      <DesktopNavLinks css={collapseBreakpointCss.desktopNavLinks}>\n        {logoLink}\n        {links}\n      </DesktopNavLinks>\n\n      <MobileNavLinksContainer css={collapseBreakpointCss.mobileNavLinksContainer}>\n        {logoLink}\n        <MobileNavLinks initial={{ x: \"150%\", display: \"none\" }} animate={animation} css={collapseBreakpointCss.mobileNavLinks}>\n          {links}\n        </MobileNavLinks>\n        <NavToggle onClick={toggleNavbar} className={showNavLinks ? \"open\" : \"closed\"}>\n          {showNavLinks ? <CloseIcon tw=\"w-6 h-6\" /> : <MenuIcon tw=\"w-6 h-6\" />}\n        </NavToggle>\n      </MobileNavLinksContainer>\n    </Header>\n  );\n};\n\n/* The below code is for generating dynamic break points for navbar.\n * Using this you can specify if you want to switch\n * to the toggleable mobile navbar at \"sm\", \"md\" or \"lg\" or \"xl\" above using the collapseBreakpointClass prop\n * Its written like this because we are using macros and we can not insert dynamic variables in macros\n */\n\nconst collapseBreakPointCssMap = {\n  sm: {\n    mobileNavLinks: tw`sm:hidden`,\n    desktopNavLinks: tw`sm:flex`,\n    mobileNavLinksContainer: tw`sm:hidden`\n  },\n  md: {\n    mobileNavLinks: tw`md:hidden`,\n    desktopNavLinks: tw`md:flex`,\n    mobileNavLinksContainer: tw`md:hidden`\n  },\n  lg: {\n    mobileNavLinks: tw`lg:hidden`,\n    desktopNavLinks: tw`lg:flex`,\n    mobileNavLinksContainer: tw`lg:hidden`\n  },\n  xl: {\n    mobileNavLinks: tw`lg:hidden`,\n    desktopNavLinks: tw`lg:flex`,\n    mobileNavLinksContainer: tw`lg:hidden`\n  }\n};\n"]},"metadata":{},"sourceType":"module"}